{"version":3,"sources":["views/help/button.jpg","views/help/slider.jpg","components/redux/assets/front.jpg","components/redux/assets/back.jpg","views/colors.js","views/theme.js","init/static.js","components/redux/index.js","views/help/index.js","views/stock/index.js","views/expiry/index.js","views/detail/brands.js","views/detail/categories.js","components/pic-icon/index.js","views/detail/index.js","components/nav/routes.js","components/nav/index.js","services/data.js","serviceWorker.js","index.js","views/detail/assets/frontBack.jpg"],"names":["module","exports","colorScheme","palette","background","paper","default","common","black","white","divider","contrastThreshold","tonalOffset","list","main","primary","light","dark","contrastText","secondary","text","disabled","hint","error","success","warning","color","action","hoverOpacity","hover","selected","disabledBackground","active","themeName","Message","props","open","Alert","elevation","variant","Snackbar","autoHideDuration","anchorOrigin","vertical","horizontal","onClose","severity","msg","DeleteIcon","iconProps","onClick","item","IconButton","aria-label","marks","value","label","valuetext","DaysSlider","Slider","style","maxWidth","marginLeft","defaultValue","getAriaValueText","aria-labelledby","step","valueLabelDisplay","inventoryStyles","makeStyles","theme","root","minHeight","component","marginTop","footer","zIndex","top","minWidth","position","borderBottom","padding","spacing","backgroundColor","borderColor","navStyles","navRoot","type","detailStyles","imgHelp","width","height","border","imgMain","imgChk","maxHeight","imgIcon","margin","saveIcon","right","restoreIcon","listStyles","inline","display","storage","refd","units","brandHelper","च्यवनप्राश","pulses","veggies","isha","brands","name","info","catHelper","अजवाइन","turmeric","pepper","धनिया","cumin","fruits","pickles","categories","description","duration","today","Date","setHours","past","getTime","future","initItem","nos","price","quantity","itemName","mfg","expiry","createDt","updateDt","unit","brand","category","initImage","backImg","backJpg","frontImg","frontJpg","uuid","currencyStyle","Intl","NumberFormat","currency","dateFormat","DateTimeFormat","month","day","year","itmDateFormat","actions","payload","prodListSelector","createSelector","data","items","fileReader","FileReader","Help","prodList","useSelector","classes","dispatch","useDispatch","replaceItems","useCallback","mergeItems","replaceStore","store","mergeStore","replaceRefData","mergeRefData","useState","setOpen","isMerge","setMerge","setSeverity","setMsg","handleChange","event","file","target","files","readAsText","master","inventory","getItem","then","currentStore","JSON","parse","catch","console","onload","result","hasOwnProperty","backupRestoreHelp","Typography","gutterBottom","backupRestore","Grid","xs","j","document","createElement","id","download","format","now","href","URL","createObjectURL","Blob","stringify","click","FormControlLabel","control","Checkbox","onChange","icon","checkedIcon","Divider","reason","length","container","alignItems","justify","ListItem","ListItemIcon","ListItemText","src","helpOne","alt","className","helpTwo","stockSelector","loading","images","Stock","removeItem","removeImg","setItem","setImage","filter","sort","a","b","setList","handleClick","itm","fitm","headerDate","setHeaderDate","hdsubDate","setHdsubDate","align","index","findIndex","mark","createDtMax","List","dense","map","labelId","image","img","undefined","FrontBack","key","button","Link","to","ListItemAvatar","Avatar","ListItemSecondaryAction","expirySelector","Expiry","expiryMax","dataSelector","helper","brandProps","renderOption","option","infos","split","slice","join","renderInput","params","TextField","Brands","handleBrand","autoProps","brandSelector","hasBrand","setValue","toggleOpen","setBrands","dialogValue","setDialogValue","handleClose","createFilterOptions","trim","matchFrom","word","sentenceToken","push","concat","Autocomplete","options","newValue","setTimeout","inputValue","filterOptions","filtered","Dialog","onSubmit","DialogTitle","DialogContent","DialogContentText","autoFocus","DialogActions","Button","catProps","toLowerCase","Categories","handleCategory","categorySelector","hasCategory","setCategories","preventDefault","PicIcon","handlePhoto","isShow","show","idealFacingMode","FACING_MODES","ENVIRONMENT","imageType","IMAGE_TYPES","JPG","onTakePhotoAnimationDone","source","isFullscreen","isImageMirror","sizeFactor","detailsSelector","dfltItem","freeSolo","autoSelect","openOnFocus","autoComplete","selectOnFocus","forcePopupIcon","disableClearable","getOptionLabel","onOpen","stopPropagation","unitProps","Detail","addCurrentItem","product","addImage","imgData","unsetLoading","back","setBack","isSaveDisable","setSaveDisable","setProduct","displayImg","setBackImg","setFrontImg","prop","frmdata","Tooltip","title","edge","InputProps","endAdornment","InputAdornment","minDate","disableFuture","showTodayButton","disablePast","Routes","routes","path","help","shift","withRouter","pathname","useLocation","location","route","BottomNavigation","BottomNavigationAction","history","createBrowserHistory","persistConfig","stateReconciler","autoMergeLevel2","rootReducer","combineReducers","router","connectRouter","state","itemlList","indexOf","imagelList","check","pReducer","persistReducer","createStore","compose","applyMiddleware","thunk","routerMiddleware","History","window","__REDUX_DEVTOOLS_EXTENSION__","f","persistor","persistStore","Boolean","hostname","match","App","prefersDarkMode","useMediaQuery","useMemo","themeMode","responsiveFontSizes","createMuiTheme","overrides","MuiListItemSecondaryAction","MuiAlert","filledWarning","filledSuccess","ThemeProvider","utils","DateFnsUtils","exact","ReactDOM","render","CssBaseline","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.a414cca4.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/button.1fef3a09.jpg\";","module.exports = __webpack_public_path__ + \"static/media/slider.c7767a75.jpg\";","module.exports = __webpack_public_path__ + \"static/media/front.ee3a0100.jpg\";","module.exports = __webpack_public_path__ + \"static/media/back.8a305f7c.jpg\";","export const colorScheme = {\n    palette: {\n        background: { paper: \"#f2e3ba\", default: \"#f4db78\" },\n        common: { black: \"#2a2b2dff\", white: \"#ececec\" },\n        divider: \"rgba(0, 0, 0, 0.12)\",\n        contrastThreshold: 3,\n        tonalOffset: 0.2,\n        list:{\n            main:\"#fffcf7\"\n        },\n        primary: {\n            main: \"#f78888\",\n            light: \"rgb(251, 204, 87)\",\n            dark: \"rgb(175, 134, 31)\",\n            contrastText: \"#795548\",\n        },\n        secondary: {\n            main: \"#f3d250\",\n            light: \"rgb(255, 205, 56)\",\n            dark: \"rgb(178, 135, 4)\",\n            contrastText: \"#4E342E\",\n        },\n        text: {\n            primary: \"#5da2d5\",\n            secondary: \"#90ccf4\",\n            disabled: \"rgba(0, 0, 0, 0.38)\",\n            hint: \"rgba(0, 0, 0, 0.38)\",\n        },\n        error: {\n            light: \"#e57373\",\n            main: \"#f44336\",\n            dark: \"#d32f2f\",\n            contrastText: \"#fff\",\n        },\n        success: {\n            light: \"#cbce91ff\",\n            main: \"#616247ff\",\n            dark: \"#101820ff\",\n            contrastText: \"#006B38FF\",\n        },\n        warning: {\n            light: \"#cbce91ff\",\n            main: \"#a13941ff\",\n            dark: \"#3c1053ff\",\n            color: \"#bd7f37ff\",\n            contrastText: \"#fdd20eff\",\n        },\n        action: {\n            hoverOpacity: 0.08,\n            hover: \"rgba(0, 0, 0, 0.08)\",\n            selected: \"rgba(0, 0, 0, 0.14)\",\n            disabledBackground: \"rgba(0, 0, 0, 0.12)\",\n            disabled: \"rgba(0, 0, 0, 0.26)\",\n            active: \"rgba(0, 0, 0, 0.54)\",\n        },\n    },\n    themeName: \"Lightning Yellow Amber Rabbit\",\n};","import React from 'react';\n\nimport MuiAlert from '@material-ui/lab/Alert';\nimport Slider from '@material-ui/core/Slider';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport IconButton from '@material-ui/core/IconButton';\nimport DeleteForeverSharpIcon from '@material-ui/icons/DeleteForeverSharp';\nimport { createMuiTheme, responsiveFontSizes } from \"@material-ui/core/styles\";\n\nimport { colorScheme } from \"./colors\";\n\nexport const Message = (props) => {\n    let open = props.open;\n    const Alert = (props) => {\n        return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n    }\n\n    return (\n        <Snackbar open={open} autoHideDuration={6000}\n            anchorOrigin={{vertical: \"top\", horizontal:\"left\"}}\n            onClose={props.onClose}>\n            <Alert onClose={props.onClose} severity={props.severity}>\n                {props.msg}\n            </Alert>\n        </Snackbar>\n    );\n};\n\nexport const DeleteIcon  = (props) => {\n    const iconProps = {...props}\n    delete iconProps.onClick;\n    delete iconProps.item;\n\n    return(\n        <IconButton onClick={props.onClick(props.item)} aria-label=\"delete\">\n           <DeleteForeverSharpIcon { ...iconProps} />\n        </IconButton>\n    );\n};\n\nexport const marks = [\n    {\n      value: 1,\n      label: '1',\n    },\n    {\n      value: 5,\n      label: '5',\n    },\n    {\n      value: 9,\n      label: '9',\n    },\n    {\n      value: 15,\n      label: '15',\n    },\n    {\n      value: 27,\n      label: '27d',\n    },\n    {\n      value: 45,\n      label: '45d',\n    },\n    {\n      value: 60,\n      label: '60days',\n    },\n    {\n      value: 90,\n      label: '90d',\n    },\n    {\n      value: 100,\n      label: '100d',\n    }\n];\n\nconst valuetext = (value) => {\n    return `${value} days`;\n};\n\nexport const DaysSlider  = (props) => {\n    return(\n        <Slider style={{maxWidth:\"91%\", marginLeft:\"1.5ch\"}}\n            defaultValue={5}\n            getAriaValueText={valuetext}\n            aria-labelledby=\"discrete-slider-custom\"\n            step={null}\n            valueLabelDisplay=\"auto\"\n            marks={marks}\n            {...props}\n        />\n    );\n};\n\nexport const inventoryUi = (themeMode) =>\n  responsiveFontSizes(\n    createMuiTheme({\n        overrides: {\n            MuiListItemSecondaryAction: {\n              root: {\n                right: 0\n              }\n            },\n            MuiAlert:{\n                filledWarning:{\n                    color: \"#FDD20EFF\"\n                },\n                filledSuccess:{\n                    color: \"#DAA03DFF\"\n                }\n            }\n        },\n      ...colorScheme,\n      type: themeMode ? \"dark\" : \"light\",\n    })\n);\n\nexport const inventoryStyles = makeStyles((theme) => ({\n    root: {\n        minHeight: \"110vh\",\n    },\n    component: {\n        minHeight: \"100vh\",\n        marginTop:\"9ch\"\n    },\n    footer: {\n        zIndex:99,\n        top:\"0.05ch\",\n        minWidth:\"100%\",\n        position: \"fixed\",\n        borderBottom: \"1px solid\",\n        padding: theme.spacing(0),\n        backgroundColor: \"transparent\",\n        borderColor: theme.palette.primary.dark\n    },\n}));\n\nexport const navStyles = makeStyles((theme) => ({\n  navRoot: {\n    backgroundColor: theme.palette.type === \"light\" ? theme.palette.secondary[200] : theme.palette.secondary[800],\n  }\n}));\n\nexport const detailStyles = makeStyles((theme) => ({\n    imgHelp: {\n        width: \"80vw\",\n        height: \"auto\",\n        border: \"2px ridge\",\n        borderColor: theme.palette.primary.dark\n    },\n    imgMain: {\n        width: \"98vw\",\n        height: \"40vh\"\n    },\n    imgChk:{\n        maxHeight:\"8.5ch\"\n    },\n    imgIcon: {\n        width: \"4ch\",\n        height: \"4ch\",\n        margin:\"-0.816ch 0 0 -0.037ch\"\n    },\n    saveIcon:{\n        top: \"9rem\",\n        right: \"8px\",\n        position: \"absolute\",\n        padding:\"4px\",\n        backgroundColor:theme.palette.action.active\n    },\n    restoreIcon:{\n        top: \"9rem\",\n        right: \"45px\",\n        position: \"absolute\",\n        padding:\"4px\",\n        backgroundColor:theme.palette.action.active\n    }\n}));\n\nexport const listStyles = makeStyles((theme) => ({\n    root: {\n      width: '100%',\n      maxWidth: '88ch',\n      backgroundColor: theme.palette.list.main,\n    },\n    inline: {\n        display: 'inline'\n    }\n}));","const Units = [\n    \"inch\",\n    \"gram\",\n    \"mg\",\n    \"piece\",\n    \"pack\",\n    \"bottle\",\n    \"dozen\",\n    \"litre\",\n    \"meter\",\n    \"tola\",\n    \"kg\",\n    \"cm\",\n    \"half piece\",\n    \"mg\",\n    \"box\"\n];\n\nconst catDataHelper = {\n    अजवाइन: \"ajwain ajowan caraway carom bishop weed\",\n    turmeric: \"turmeric haldi\",\n    pepper: \"pepper kali white mirch\",\n    धनिया: \"dhaniya dhaneya coriander\",\n    cumin: \"cumin jira\",\n    veggies:\n        \"spinach palak methi fenugreek alu tamatar muli raddish carraot gazar beans\",\n    fruits:\n        \"mosambi sweet lime lemon limetta anar pomegranate pineapple grapes kiwi\",\n    pickles:\n        \"goose berry carrot kathal jackfruit eggplant chilli garlic ginger amla\"\n};\nconst CatData = [\n    { name: \"Veggies\", description: \"tomatoes/potato/onion/veggies\", duration: 6 },\n    {\n        name: \"Fruits\",\n        description: \"apple/papaya/banana/अनार/मौसंबी/fruits\",\n        duration: 4\n    },\n    { name: \"Wet Spices\", description: \"ginger/garlic/lemon\", duration: 5 },\n    { name: \"Dairy\", description: \"yogurt/butter/powder/buttermilk\", duration: 5 },\n    { name: \"Pulses\", description: \"lentils/beans/peas/urad/bhat\", duration: 120 },\n    { name: \"Spices\", description: \"अजवाइन/धनिया/cumin/turmeric/pepper\", duration: 210 },\n    { name: \"Cereals\", description: \"flour/sooji/rice\" },\n    { name: \"Bakery\", description: \"गोलगप्पा/मुरमुरे/भुजिया\", duration: 60 },\n    { name: \"A2\", description: \"milk\", duration: 2 },\n    { name: \"Tetra\", description: \"milk\", duration: 90 },\n    { name: \"Plants\", description: \"nursery/grafting/fertilizer\" },\n    { name: \"Sauces\", description: \"tomato/chilli/soya/dark/mustard/pasta\", duration: 90 },\n    { name: \"Pickles\", description: \"timla/mango/mixed/lime/pickles\", duration: 90 },\n    { name: \"Cleaners\", description: \"detergent/harpic\" },\n    { name: \"Beverages\", description: \"coffee/tea/juice/soda\", duration: 80 },\n    { name: \"Household\", description: \"furniture/spares/towels\" },\n    { name: \"Stationary\", description: \"copies/sheets/pencil\" },\n    { name: \"Personal Care\", description: \"soap/shampoo/toothpaste\" },\n    { name: \"Paper Cleaning\", description: \"tissue/wipes\" },\n];\n\nconst branDataHelper = {\n    च्यवनप्राश: \"chyawanprash chawanprash\",\n    pulses: \"urad masoor chhana rajma moong horse gram sabut\",\n    veggies:\n        \"spinach palak methi fenugreek alu tamatar muli raddish carraot gazar beans\",\n    isha: \"kadha sanjivani idilli nilambu\",\n};\nconst BranData = [\n    { name: \"Big Basket\", info: \"Indian/rice/pulses/nuts/sweetner/veggies\" },\n    {\n        name: \"Golden Harvest\",\n        info: \"Indian/rice/pulses/nuts/sweetner/harvest\",\n    },\n    { name: \"Organic Mantra\", info: \"Indian/rice/pulses/nuts/sweetner/mantra\" },\n    { name: \"PepsiCo\", info: \"US/lays/pepsi\" },\n    { name: \"Coke\", info: \"US/lays/coke\" },\n    { name: \"Adani\", info: \"Indian/fortune/mustard/oil/adani\" },\n    { name: \"Motherdairy\", info: \"Indian/milk/curd/butter/mdairy\" },\n    { name: \"Gaurashtra\", info: \"Indian/ghee/sendha/salt/gau\" },\n    { name: \"Devbhumi\", info: \"Indian/salt/sendha/bhumi\" },\n    { name: \"Patanjali\", info: \"Indian/ghee/mustard/oil/patanjali\" },\n    { name: \"Cadbury\", info: \"UK/dairy/milk/silk/five/star/cadbury\" },\n    { name: \"Nandani\", info: \"Indian/milk/curd/nandani\" },\n    { name: \"Nestle\", info: \"Swiss/whitener/cofee/nestle\" },\n    { name: \"Zandu\", info: \"Indian/balm/zandu\" },\n    { name: \"Dabur\", info: \"Indian/honey/च्यवनप्राश/toothpaste/dabur\" },\n    { name: \"Local\", info: \"Indian/rice/pulses/nuts/sweetner/veggies\" },\n    { name: \"Tata\", info: \"Indian/salt/tata\" },\n    { name: \"Amul\", info: \"Indian/milk/gold/butter/amul\" },\n    { name: \"Isha\", info: \"Indian/honey/च्यवनप्राश/dosa/काढ़ा/isha\" },\n];\n\nexport const storage = {\n    refd: {units: Units, brandHelper: branDataHelper, brands: BranData, catHelper: catDataHelper, categories: CatData}\n};\n","import { storage } from \"../../init/static\";\n\nimport frontJpg from \"./assets/front.jpg\";\nimport backJpg from \"./assets/back.jpg\";\n\nexport const today = new Date();\ntoday.setHours(0,0,0,0);\n\nconst past = new Date(today.getTime() - (60 * 24 * 60 * 60 * 1000));\nconst future = new Date(today.getTime() + (90 * 24 * 60 * 60 * 1000));\nconst initItem = {\n    nos: 1,\n    price: 399,\n    quantity: 350,\n    itemName: \"Pickle\",\n    mfg: past.getTime(),\n    expiry: future.getTime(),\n    createDt: today.getTime(),\n    updateDt: today.getTime(),\n    unit: storage.refd.units[1],\n    brand: storage.refd.brands[8],\n    category: storage.refd.categories[12]\n};\nconst initImage = {\n    backImg:backJpg,\n    frontImg:frontJpg,\n    uuid:\"bbe8b344-5637-4855-a504-bbb6c0bea477\"\n};\n\nexport const currencyStyle = new Intl.NumberFormat(\"en-IN\", {\n    currency: \"INR\",\n    style: \"currency\"\n});\n\nexport const dateFormat = new Intl.DateTimeFormat(\"en-IN\", {\n    month: \"long\",\n    day: \"2-digit\",\n    year: \"numeric\"\n});\n\nexport const itmDateFormat = new Intl.DateTimeFormat(\"en-IN\", {\n    month: \"short\",\n    day: \"numeric\",\n    year: \"2-digit\"\n});\n\nexport const actions = {\n    ADD: \"add_item\",\n    REF: \"ref_item\",\n    IMG: \"uuid_image\",\n    ITEM: \"uuid_item\",\n    RM: \"remove_item\",\n    IMAGE: \"add_image\",\n    RMIMG: \"remove_image\",\n    LOADING: \"set_loading\",\n    ALL: \"default\",\n    MRG_ITEMS: \"merge_items\",\n    RPL_ITEMS: \"replace_items\",\n    MRG_STORE: \"merge_store\",\n    RPL_STORE: \"replace_store\",\n    MRG_REFD: \"merge_ref_data\",\n    RPL_REFD: \"replace_ref_data\"\n};\n\nexport const action = (type, payload) => {\n    return { type, payload };\n};\n\nexport const items = (state = {loading: false, list: [], item: initItem, dfltItem: initItem}, action) => {\n    let product = {};\n    switch (action.type) {\n        case actions.ITEM:\n            product = state[\"list\"].filter(itm => itm.uuid === action.payload)[0];\n            return {\n                ...state,\n                item: product,\n                loading: true\n            };\n        case actions.ADD:\n            const itemlList = state[\"list\"].filter(itm => itm.uuid !== action.payload.uuid);\n            itemlList.push({...action.payload, updateDt:Date.now()});\n            product = {...action.payload};\n            delete product.uuid;\n            return {\n                ...state,\n                list:itemlList,\n                item: product,\n                loading: false\n            };\n        case actions.RM:\n            return {\n                ...state,\n                list:state[\"list\"].filter(itm => itm.uuid !== action.payload),\n                loading: false\n            };\n        case actions.LOADING:\n            return {\n                ...state,\n                item: {...initItem},\n                dfltItem: {...initItem},\n                loading: action.payload\n            };\n        case actions.RPL_ITEMS:\n            return {...action.payload};\n        case actions.MRG_ITEMS:\n            return {...state, ...action.payload};\n        default:\n            return state;\n    }\n};\n\nexport const store = (state = {loading: false, images: [], image:initImage}, action) => {\n    switch (action.type) {\n        case actions.IMAGE:\n            if(action.payload.frontImg.indexOf(\"front\") > -1 && action.payload.backImg.indexOf(\"back\") > -1){\n                action.payload.uuid = initImage.uuid;\n            }\n            const imagelList = state[\"images\"].filter(img => img.uuid !== action.payload.uuid);\n            imagelList.push(action.payload);\n            return {\n                ...state,\n                images: imagelList,\n                image: {...action.payload},\n                loading: true\n            };\n        case actions.IMG:\n            const check = state[\"images\"].filter(img => img.uuid === action.payload)[0];\n            return {\n                ...state,\n                image: check ? {...check}: {...initImage},\n                loading: false\n            };\n        case actions.RMIMG:\n            return {\n                ...state,\n                images:state[\"images\"].filter(img => img.uuid !== action.payload),\n                loading: false\n            };\n        case actions.RPL_STORE:\n             return {...action.payload};\n        case actions.MRG_STORE:\n             return {...state, ...action.payload};\n        default:\n            return state;\n    }\n};\n\nexport const refd = (state = storage.refd, action) => {\n    switch (action.type) {\n        case actions.REF:\n            return {\n                ...state,\n                loading: true,\n            };\n        case actions.RPL_REFD:\n            return {...action.payload};\n        case actions.MRG_REFD:\n            return {...state, ...action.payload};\n        default:\n            return state;\n    }\n};\n","import { createSelector } from \"reselect\";\nimport storage from 'redux-persist/lib/storage'\nimport { useSelector, useDispatch } from \"react-redux\";\nimport React, { useState, useCallback } from \"react\";\n\nimport { Grid } from \"@material-ui/core\";\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Typography from '@material-ui/core/Typography';\nimport EmailSharpIcon from '@material-ui/icons/EmailSharp';\nimport BackupSharpIcon from '@material-ui/icons/BackupSharp';\nimport CloudDownloadSharpIcon from '@material-ui/icons/CloudDownloadSharp';\n\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\n\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Favorite from '@material-ui/icons/Favorite';\nimport FavoriteBorder from '@material-ui/icons/FavoriteBorder';\n\nimport helpOne from \"./button.jpg\";\nimport helpTwo from \"./slider.jpg\";\nimport {Message, detailStyles} from \"../theme\";\nimport { action, actions, itmDateFormat} from  \"../../components/redux\";\n\nconst prodListSelector = createSelector(\n    (data) => data.items.list,\n    (list) => list\n);\n\nconst fileReader = new FileReader();\n\nexport const Help = (props) => {\n    const prodList = useSelector(prodListSelector);\n\n    const classes = detailStyles();\n    const dispatch = useDispatch();\n\n    const replaceItems = useCallback(\n        (items) => dispatch(action(actions.RPL_ITEMS, items)),\n        [dispatch]\n    );\n    const mergeItems = useCallback(\n        (items) => dispatch(action(actions.MRG_ITEMS, items)),\n        [dispatch]\n    );\n\n    const replaceStore = useCallback(\n        (store) => dispatch(action(actions.RPL_STORE, store)),\n        [dispatch]\n    );\n    const mergeStore = useCallback(\n        (store) => dispatch(action(actions.MRG_STORE, store)),\n        [dispatch]\n    );\n\n    const replaceRefData = useCallback(\n        (refd) => dispatch(action(actions.RPL_REFD, refd)),\n        [dispatch]\n    );\n    const mergeRefData = useCallback(\n        (refd) => dispatch(action(actions.MRG_REFD, refd)),\n        [dispatch]\n    );\n\n    const [open, setOpen] = useState(false);\n    const [isMerge, setMerge] = useState(false);\n    const [severity, setSeverity] = useState(\"info\");\n    const [msg, setMsg] = useState(\"ok\");\n    const clsMsg = (event, reason) => {\n        if (reason === 'clickaway') {\n            return;\n        }\n        setOpen(false);\n    };\n\n    const handleMerge = (event) => { setMerge(true); };\n\n    const handleChange = (event) => {\n        const file = event.target.files[0];\n        if(\"application/json\" === file.type){\n            fileReader.readAsText(file);\n        }\n        else{\n            setSeverity(\"error\");\n            setMsg(\"A application/json file is required instead of \"+file.type);\n            setOpen(true);\n        }\n    };\n\n    let master = {};\n    let inventory = {};\n    storage.getItem(\"persist:root\").then((data) => {\n        const currentStore = JSON.parse(data);\n        master.refd = JSON.parse(currentStore.refd);\n        inventory.items = JSON.parse(currentStore.items);\n        inventory.store = JSON.parse(currentStore.store);\n    })\n    .catch((error) => {\n        setSeverity(\"error\");\n        setMsg(\"Unable to fecth data from store error: \"+error);\n        setOpen(true);\n        console.error(\"error: \"+error);\n    });\n\n    fileReader.onload = (event) => {\n        inventory = JSON.parse(event.target.result);\n        if(inventory){\n            if(inventory.hasOwnProperty(\"refd\")){\n                if(isMerge){\n                    mergeRefData(inventory.refd);\n                }\n                else replaceRefData(inventory.refd);\n                setMsg(\"The master data is restored from the provided json file\");\n            }\n            else {\n                if(inventory.hasOwnProperty(\"items\")){\n                    if(isMerge){\n                        mergeItems(inventory.items);\n                    }\n                    else replaceItems(inventory.items);\n                }\n                if(inventory.hasOwnProperty(\"store\")){\n                    if(isMerge){\n                        mergeStore(inventory.store);\n                    }\n                    else replaceStore(inventory.store);\n                }\n                setMsg(\"The application data is restored from the provided json file\");\n            }\n            setSeverity(\"success\");\n        }\n        else {setSeverity(\"warning\"); setMsg(\"The provided json file cannot be loaded to the local inventory\");}\n        setOpen(true);\n    };\n\n    let backupRestoreHelp = <Typography variant=\"body2\" gutterBottom>This page also has <i><u>backup / restore</u></i> feature shown when some products are added in the stock.</Typography>;\n    let backupRestore =\n        <Grid item xs={12}>\n            <Typography variant=\"h5\">Backup / Restore</Typography>\n            <Typography variant=\"subtitle1\" gutterBottom><u>Backup</u></Typography>\n            <Typography variant=\"body2\" gutterBottom>Application data&nbsp;\n                <IconButton\n                        onClick={() => {\n                            let j = document.createElement(\"a\");\n                            j.id = \"download\";\n                            j.download = \"inventory_\"+itmDateFormat.format(Date.now())+\".json\";\n                            j.href = URL.createObjectURL(new Blob([JSON.stringify(inventory)]));\n                            j.click()\n                        }}\n                        aria-label=\"backup\"\n                        component=\"span\">\n                        <CloudDownloadSharpIcon color=\"primary\" />\n                </IconButton>\n            </Typography>\n            <Typography variant=\"body2\" gutterBottom>Master Data&nbsp;\n                <IconButton\n                        onClick={() => {\n                            let j = document.createElement(\"a\");\n                            j.id = \"download\";\n                            j.download = \"master_\"+itmDateFormat.format(Date.now())+\".json\";\n                            j.href = URL.createObjectURL(new Blob([JSON.stringify(master)]));\n                            j.click()\n                        }}\n                        aria-label=\"backup\"\n                        component=\"span\">\n                        <CloudDownloadSharpIcon color=\"primary\" />\n                </IconButton>\n            </Typography>\n            <Typography variant=\"subtitle1\" gutterBottom>\n                <u>Restore</u>&nbsp;&nbsp;\n                <FormControlLabel\n                    control={<Checkbox onChange={handleMerge} icon={<FavoriteBorder />} checkedIcon={<Favorite />} />}\n                    label=\"Replace\" />\n                    <i>filled heart is merge</i>\n            </Typography>\n            <Typography variant=\"body2\" gutterBottom>Application data&nbsp;\n                <IconButton aria-label=\"restore-application-data\" component=\"label\">\n                    <input name=\"appdata\" type=\"file\" style={{ display: \"none\" }} onChange={handleChange} />\n                    <BackupSharpIcon color=\"primary\" />\n                </IconButton>\n            </Typography>\n            <Typography variant=\"body2\" gutterBottom>Master data&nbsp;\n                <IconButton aria-label=\"restore-reference-data\" component=\"label\">\n                    <input name=\"refdata\" type=\"file\" style={{ display: \"none\" }} onChange={handleChange} />\n                    <BackupSharpIcon color=\"primary\" />\n                </IconButton>\n            </Typography>\n            <Typography variant=\"body2\" gutterBottom><i>The <b>master data</b> should be backed-up if <b>you add any extra category or brand</b> in the details view.\n                The brand and category <b>drop-down on details view are multi-functional</b>. You can search like \"urad\" and it will give pulses. You can also type new product like \"Vinegar\" and an option \"Add vinegar\" will be shown. Same way for brands.</i></Typography>\n            <Divider variant=\"middle\" />\n            <Message open={open}  severity={severity} msg={msg} onClose={clsMsg} />\n        </Grid>;\n\n    if(!prodList || prodList.length < 1) backupRestore = \"\";\n    else backupRestoreHelp = \"\";\n\n    return (\n        <>\n        {backupRestore}\n        <Grid item xs={12} container alignItems=\"center\" justify=\"space-evenly\">\n            <Grid item xs={3}><Typography variant=\"h5\">Help</Typography></Grid>\n            <Grid item xs={8}>\n            <ListItem>\n                <ListItemIcon><EmailSharpIcon color=\"secondary\"/></ListItemIcon>\n                <ListItemText>gaurav.joshi@email.com</ListItemText>\n            </ListItem>\n            </Grid>\n        </Grid>\n        <Grid item xs={12}>\n            {backupRestoreHelp}\n            <Typography variant=\"body2\" gutterBottom>The screenshot shows reset and save buttons.\n            This also shows the <i><u>selectable package sizeing</u></i> like 350 grams or 1 liter or 145 cm etc.</Typography>\n            <img src={helpOne} alt=\"save reset buttons\" className={classes.imgHelp} />\n            <Typography variant=\"body2\" gutterBottom>Please click on <b>\"Details\"</b> icon on top right for entering stock details. The \"Cart\" icon on top left will display the list of the items added in the stock.</Typography>\n            <Typography variant=\"body2\" gutterBottom>The screenshot below show declining and triangular navigation buttons.\n            The date slider can be moved to the left or right by click dragging. The resulting list item can be clicked to move to the details page.</Typography>\n            <img src={helpTwo} alt=\"slider navigation buttons\" className={classes.imgHelp} />\n\n        </Grid>\n        <Grid item xs={12}>\n            <Divider variant=\"middle\" />\n            <Typography variant=\"body2\" gutterBottom>The inventory application is used to track items.\n             The <b>\"Detail\"</b> view has a form for entering fields like <b>expiry date</b> and <b>manufacturing date</b> along with <b>product name, quantity type and quantity purchased (#).</b> The purchase date and update date are\n             captured automatically. The image of item can also be clicked for capturing more details. The items are listed in various intitutive\n             sort order for expiry and purchase date in <b>\"Expiry\"</b> and <b>\"Stock\"</b> view. Please move slider to see products in particular date range.\n            </Typography>\n            <Typography variant=\"body2\" gutterBottom>The inventory application is local to user browser. <b><i>It uses the browser databse to persist\n             data between browser restarts.</i></b> The data can be erased when broswer cache is cleared for clearing of \"localStorage\". The data can be exported and\n             imported very conveniently as provided in the above section. The json file exported can be imported in any inventory app on any machine.\n             So you can share these exported files to give view of your inventory to other users, they can edit and you can import back the edited file.\n             The stuff like this and more.... Please explore. No ads, no troubles, can be operated fully offline.\n            </Typography>\n        </Grid>\n        </>\n    )\n}\n","import { Link } from 'react-router-dom';\nimport { createSelector } from \"reselect\";\nimport React, { useState, useCallback } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport { Grid } from \"@material-ui/core\";\nimport List from '@material-ui/core/List';\nimport Avatar from '@material-ui/core/Avatar';\nimport ListItem from '@material-ui/core/ListItem';\nimport Typography from '@material-ui/core/Typography';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\n\nimport FrontBack from \"../detail/assets/frontBack.jpg\";\nimport { DaysSlider, DeleteIcon, Message, listStyles, marks } from \"../theme\"\nimport { action, actions, currencyStyle, itmDateFormat} from  \"../../components/redux\";\n\nconst today = new Date();\n\nconst stockSelector = createSelector(\n    (data) => data.items.item,\n    (data) => data.items.list,\n    (data) => data.items.loading,\n    (data) => data.store.images,\n    (item, list, loading, images) => {return {item:item, list:list, loading:loading, images:images}}\n);\n\nexport const Stock = (props) => {\n    const classes = listStyles();\n    const dispatch = useDispatch();\n    const removeItem = useCallback(\n        (uuid) => dispatch(action(actions.RM, uuid)),\n        [dispatch]\n    );\n    const removeImg = useCallback(\n        (uuid) => dispatch(action(actions.RMIMG, uuid)),\n        [dispatch]\n    );\n    const setItem = useCallback(\n        (uuid) => dispatch(action(actions.ITEM, uuid)),\n        [dispatch]\n    );\n    const setImage = useCallback(\n        (uuid) => dispatch(action(actions.IMG, uuid)),\n        [dispatch]\n    );\n\n    const data = useSelector(stockSelector);\n\n    const [list, setList] = useState(data.list.filter(item=> item.createDt > (today.getTime() - 432000000) && item.createDt <= today.getTime()).sort((a,b) => {\n        return new Date(b.createDt) - new Date(a.createDt);\n    }));\n\n    const handleClick = (itm) => () => {\n        if (itm && {} !== itm) {\n            removeItem(itm.uuid);\n            removeImg(itm.uuid);\n            setList(list => {\n                return list.filter(fitm => fitm.uuid !== itm.uuid);\n            });\n            setSeverity(\"warning\");\n            setMsg(`${itm.itemName} bought on ${itmDateFormat.format(new Date(itm.createDt))} worth [ ${currencyStyle.format(itm.nos * itm.price)} ] removed from the stock`);\n            setOpen(true);\n        }\n    };\n\n  const [headerDate, setHeaderDate] = useState(today.getTime());\n  const [hdsubDate, setHdsubDate] = useState((today.getTime() - 432000000));\n  const images = data.images;\n\n  const sliderChange = (event, value) => {\n    let index = marks.findIndex(mark => mark.value === value);\n\n    if(index + 1 >= marks.length){\n        const createDt = today.getTime() - (value * 24 * 60 * 60 * 1000);\n        setList(data.list.filter(item=>item.createDt < createDt).sort((a,b) => {\n            return new Date(b.createDt) - new Date(a.createDt);\n        }));\n        setHdsubDate(0);\n        setHeaderDate(createDt);\n    }\n    else{\n        index = index + 1;\n        let createDt = (1 === value) ? today.getTime() : today.getTime() - (value * 24 * 60 * 60 * 1000);\n        let createDtMax = today.getTime() - ((marks[index].value) * 24 * 60 * 60 * 1000);\n        setHeaderDate(createDt);\n        setHdsubDate(createDtMax);\n        setList(data.list.filter(item=>item.createDt < createDt && item.createDt >= createDtMax).sort((a,b) => {\n            return new Date(b.createDt) - new Date(a.createDt);\n        }));\n    }\n  };\n\n  const [open, setOpen] = useState(false);\n  const [severity, setSeverity] = useState(\"info\");\n  const [msg, setMsg] = useState(\"ok\");\n  const clsMsg = (event, reason) => {\n      if (reason === 'clickaway') {\n          return;\n      }\n      setOpen(false);\n  };\n\nreturn (\n    <Grid item xs={12}>\n        <Grid item xs={12} container alignItems=\"flex-end\">\n            <Grid item xs={3}><Typography variant=\"h5\">Stock</Typography></Grid>\n            <Grid item xs={8}><Typography variant=\"caption\" display=\"block\" align=\"right\">\n                {0 === hdsubDate ? `older than ${itmDateFormat.format(headerDate)}`\n                : `${itmDateFormat.format(hdsubDate)} - to- ${itmDateFormat.format(headerDate)}`\n                }\n            </Typography></Grid>\n        </Grid>\n        <DaysSlider defaultValue={1} onChange={sliderChange} />\n        <List dense className={classes.root}>\n        {list.map((item, index) => {\n            const labelId = `${item.uuid}`;\n            let image = images.filter(img => img.uuid === item.uuid)[0];\n            if(null === image || undefined === image) image = {frontImg:FrontBack};\n            return (\n                <ListItem key={item.uuid} button divider onClick={() => {setItem(item.uuid); setImage(item.uuid);}} component={Link} to=\"/detail\">\n                    <ListItemAvatar>\n                        <Avatar\n                            alt={`item n°${item.index + 1}`}\n                            src={image.frontImg}\n                        />\n                    </ListItemAvatar>\n                    <ListItemText id={labelId}\n                        primary={`${item.itemName}, ${(item.nos * item.quantity)} ${item.unit} worth ${currencyStyle.format(item.nos * item.price)}`}\n                        secondary={\n                            <>\n                                <Typography\n                                    component=\"span\"\n                                    variant=\"body2\"\n                                    className={classes.inline}\n                                    color=\"textPrimary\">\n                                    {`dated ${itmDateFormat.format(new Date(item.mfg))} at ${currencyStyle.format(item.price)} / ${1 === item.quantity?\"\":item.quantity} ${item.unit}`}\n                                </Typography>\n                                {` purchased on ${itmDateFormat.format(new Date(item.createDt))}, best before ${itmDateFormat.format(new Date(item.expiry))}`}\n                            </>\n                        }\n                    />\n                    <ListItemSecondaryAction>\n                        <DeleteIcon\n                            onClick={handleClick}\n                            item = {item}\n                            color=\"primary\"\n                        />\n                    </ListItemSecondaryAction>\n                </ListItem>\n            );\n        })}\n        </List>\n        <Message open={open}  severity={severity} msg={msg} onClose={clsMsg} />\n    </Grid>\n)\n}","import { Link } from 'react-router-dom';\nimport { createSelector } from \"reselect\";\nimport React, { useState, useCallback } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport { Grid } from \"@material-ui/core\";\nimport List from '@material-ui/core/List';\nimport Avatar from '@material-ui/core/Avatar';\nimport ListItem from '@material-ui/core/ListItem';\nimport Typography from '@material-ui/core/Typography';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\n\nimport FrontBack from \"../detail/assets/frontBack.jpg\";\nimport { DaysSlider, DeleteIcon, Message, listStyles, marks } from \"../theme\"\nimport { action, actions, currencyStyle, itmDateFormat, today} from  \"../../components/redux\";\n\nconst expirySelector = createSelector(\n    (data) => data.items.item,\n    (data) => data.items.list,\n    (data) => data.items.loading,\n    (data) => data.store.images,\n    (item, list, loading, images) => {return {item:item, list:list, loading:loading, images:images}}\n);\n\nexport const Expiry = (props) => {\n    const classes = listStyles();\n    const dispatch = useDispatch();\n    const removeItem = useCallback(\n        (uuid) => dispatch(action(actions.RM, uuid)),\n        [dispatch]\n    );\n    const removeImg = useCallback(\n        (uuid) => dispatch(action(actions.RMIMG, uuid)),\n        [dispatch]\n    );\n    const setItem = useCallback(\n        (uuid) => dispatch(action(actions.ITEM, uuid)),\n        [dispatch]\n    );\n    const setImage = useCallback(\n        (uuid) => dispatch(action(actions.IMG, uuid)),\n        [dispatch]\n    );\n\n    const data = useSelector(expirySelector);\n\n    const [list, setList] = useState(data.list.filter(item => new Date(item.expiry).getTime() < (today.getTime() + 172800000)).sort((a,b) => {\n        return new Date(a.expiry) - new Date(b.expiry);\n    }));\n\n    const handleClick = (itm) => () => {\n        if (itm && {} !== itm) {\n            removeItem(itm.uuid);\n            removeImg(itm.uuid);\n            setList(list => {\n                return list.filter(fitm => fitm.uuid !== itm.uuid);\n            });\n            setSeverity(\"warning\");\n            setMsg(`${itm.itemName} expiring on ${itmDateFormat.format(new Date(itm.expiry))} worth [ ${currencyStyle.format(itm.nos * itm.price)} ] removed from the stock`);\n            setOpen(true);\n        }\n    };\n\n  const [headerDate, setHeaderDate] = useState(today.getTime());\n  const [hdsubDate, setHdsubDate] = useState(today.getTime()-1);\n  const images = data.images;\n\n  const sliderChange = (event, value) => {\n        let index = marks.findIndex(mark => mark.value === value);\n        if(index + 1 >= marks.length){\n            const expiry = today.getTime() + ((value - 1) * 24 * 60 * 60 * 1000);\n            setHdsubDate(expiry);\n            setHeaderDate(expiry);\n            setList(data.list.filter(item => new Date(item.expiry).getTime() >= expiry).sort((a,b) => {\n                return new Date(a.expiry) - new Date(b.expiry);\n            }));\n        }\n        else{\n             index = index + 1;\n             const expiry = today.getTime() + ((value - 1) * 24 * 60 * 60 * 1000);\n             const expiryMax = today.getTime() + ((marks[index].value - 1) * 24 * 60 * 60 * 1000);\n             setHeaderDate(expiry);\n             setHdsubDate(expiryMax);\n             setList(data.list.filter(item => new Date(item.expiry).getTime() >= expiry && new Date(item.expiry).getTime() < expiryMax).sort((a,b) => {\n                 return new Date(a.expiry) - new Date(b.expiry);\n             }));\n        }\n  };\n\n  const [open, setOpen] = useState(false);\n  const [severity, setSeverity] = useState(\"info\");\n  const [msg, setMsg] = useState(\"ok\");\n  const clsMsg = (event, reason) => {\n      if (reason === 'clickaway') {\n          return;\n      }\n      setOpen(false);\n  };\n\nreturn (\n    <Grid item xs={12}>\n        <Grid item xs={12} container alignItems=\"flex-end\">\n            <Grid item xs={3}><Typography variant=\"h5\">Expiry</Typography></Grid>\n            <Grid item xs={8}><Typography variant=\"caption\" display=\"block\" align=\"right\">\n                {hdsubDate < headerDate ?  `${itmDateFormat.format(headerDate)} - expired`\n                : hdsubDate === headerDate ? `on / after ${itmDateFormat.format(headerDate)}`\n                : `${itmDateFormat.format(headerDate)} -to- ${itmDateFormat.format(hdsubDate - 1)}`\n                }\n            </Typography></Grid>\n        </Grid>\n\n        <DaysSlider onChange={sliderChange} />\n        <List dense className={classes.root}>\n        {list.map((item, index) => {\n            const labelId = `${item.uuid}`;\n            let image = images.filter(img => img.uuid === item.uuid)[0];\n            if(null === image || undefined === image) image = {frontImg:FrontBack};\n            return (\n                <ListItem key={item.uuid} button divider onClick={() => {setItem(item.uuid); setImage(item.uuid);}} component={Link} to=\"/detail\">\n                    <ListItemAvatar>\n                        <Avatar\n                            alt={`item n°${item.index + 1}`}\n                            src={image.frontImg}\n                        />\n                    </ListItemAvatar>\n                    <ListItemText id={labelId}\n                        primary={`${item.itemName} worth ${currencyStyle.format(item.nos * item.price)} on ${itmDateFormat.format(new Date(item.expiry))}`}\n                        secondary={\n                            <>\n                                <Typography\n                                    component=\"span\"\n                                    variant=\"body2\"\n                                    className={classes.inline}\n                                    color=\"textPrimary\"\n                                >\n                                    {`${item.nos} units bought at ${currencyStyle.format(item.price)} / ${1 === item.quantity?\"\":item.quantity} ${item.unit}`}\n                                </Typography>\n                                {` on ${itmDateFormat.format(new Date(item.updateDt))}`}\n                            </>\n                        }\n                    />\n                    <ListItemSecondaryAction>\n                        <DeleteIcon\n                            onClick={handleClick}\n                            item = {item}\n                            color=\"primary\"\n                        />\n                    </ListItemSecondaryAction>\n                </ListItem>\n            );\n        })}\n        </List>\n        <Message open={open}  severity={severity} msg={msg} onClose={clsMsg} />\n    </Grid>\n)\n}","/* eslint-disable no-use-before-define */\nimport React, { useState/* , useCallback */ } from \"react\";\nimport { /* useDispatch, */ useSelector } from \"react-redux\";\nimport { createSelector } from \"reselect\";\n\nimport Dialog from \"@material-ui/core/Dialog\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Typography from \"@material-ui/core/Typography\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\n\nimport Autocomplete, {\n  createFilterOptions,\n} from \"@material-ui/lab/Autocomplete\";\n\nconst dataSelector = createSelector(\n    (data) => data.refd.brandHelper,\n    (data) => data.refd.brands,\n    (data) => data.items.item,\n    (brandHelper, brands, item) => {\n        return {helper:brandHelper, data:brands, item: item}\n    }\n);\n\nconst brandProps = {\n  renderOption: (option) => {\n    const infos = option.info ? option.info.split(\"/\") : [];\n    return (\n      <>\n        <div>\n          <Typography color=\"textPrimary\">\n            {option.name} <small><i>{infos.slice(0, 1)}</i></small>\n          </Typography>\n          <Typography variant=\"body2\" color=\"primary\">\n            {infos.slice(1, -1).join(\" \")}\n          </Typography>\n        </div>\n      </>\n    );\n  },\n  renderInput: (params) => <TextField {...params} label=\"Brand\" />,\n};\n\nexport const Brands = function ({ handleBrand, style, autoProps }) {\n\n  const brandSelector = useSelector(dataSelector);\n  const hasBrand = brandSelector.item && brandSelector.item.hasOwnProperty(\"brand\") && brandSelector.item.brand.hasOwnProperty(\"name\");\n  const [value, setValue] = useState(hasBrand?brandSelector.item.brand: brandSelector[\"data\"][0]);\n  const [open, toggleOpen] = useState(false);\n  const [brands, setBrands] = useState(brandSelector[\"data\"]);\n  const [dialogValue, setDialogValue] = useState({\n    name: \"\",\n    info: \"India\",\n  });\n\n  const handleClose = () => {\n    setDialogValue({\n      name: \"\",\n      info: \"\",\n    });\n\n    toggleOpen(false);\n  };\n\n  const handleSubmit = (event) => {\n    setValue({\n      name: dialogValue.name,\n      info: dialogValue.info,\n    });\n\n    if (\n      null !== dialogValue &&\n      undefined !== dialogValue &&\n      dialogValue.hasOwnProperty(\"name\") &&\n      dialogValue.hasOwnProperty(\"info\")\n    ) {\n      handleBrand(\"brand\")({\n        target: {\n          value: dialogValue,\n        },\n      });\n    }\n\n    setBrands((brands) => [...brands, dialogValue]);\n\n    handleClose();\n  };\n\n  const filter = createFilterOptions({\n    trim: true,\n    matchFrom: \"any\",\n    stringify: (option) => {\n      let word;\n      let sentenceToken = option.info.split(\"/\").slice(1);\n      for (let index in sentenceToken) {\n        word = sentenceToken[index];\n        if (brandSelector[\"helper\"].hasOwnProperty(word)) {\n          sentenceToken.push(brandSelector[\"helper\"][word]);\n        }\n      }\n      return option.name.concat(\"-\").concat(sentenceToken.join(\"-\"));\n    },\n  });\n\n  return (\n    <>\n      <Autocomplete\n        id=\"brands-dialog\"\n        {...autoProps}\n        {...brandProps}\n        value={value}\n        options={brands}\n        onChange={(event, newValue) => {\n          if (typeof newValue === \"string\") {\n            setTimeout(() => {\n              toggleOpen(true);\n              setDialogValue({\n                name: newValue,\n                info: \"India\",\n              });\n            });\n          } else if (newValue && newValue.inputValue) {\n            toggleOpen(true);\n            setDialogValue({\n              name: newValue.inputValue,\n              info: \"India\",\n            });\n          } else {\n            setValue(newValue);\n        }\n        if (null !== newValue &&\n            undefined !== newValue &&\n            newValue.hasOwnProperty(\"name\") &&\n            newValue.hasOwnProperty(\"info\") ) {\n                handleBrand(\"brand\")({\n                    target: { value: newValue }\n                });\n            }\n        }}\n\n        filterOptions={(options, params) => {\n          const filtered = filter(options, params);\n          if (params.inputValue !== \"\") {\n            filtered.push({\n              inputValue: params.inputValue,\n              name: `Add \"${params.inputValue}\"`,\n            });\n          }\n          return filtered;\n        }}\n        style={style}\n      />\n\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"form-brands-dialog\"\n      >\n        <form onSubmit={handleSubmit}>\n          <DialogTitle id=\"form-brands-dialog\">Add a new brand</DialogTitle>\n          <DialogContent>\n            <DialogContentText>\n              Did you miss any brands in our list? Please, add it!\n            </DialogContentText>\n            <TextField\n              autoFocus\n              margin=\"dense\"\n              id=\"brand-name\"\n              value={dialogValue.name}\n              onChange={(event) =>\n                setDialogValue({ ...dialogValue, name: event.target.value })\n              }\n              label=\"Name\"\n              type=\"text\"\n            />\n            <TextField\n              margin=\"dense\"\n              id=\"brand-info\"\n              value={dialogValue.info}\n              onChange={(event) =>\n                setDialogValue({ ...dialogValue, info: event.target.value })\n              }\n              label=\"Information\"\n              type=\"text\"\n            />\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={handleClose} color=\"primary\">\n              Cancel\n            </Button>\n            <Button type=\"submit\" color=\"primary\">\n              Add\n            </Button>\n          </DialogActions>\n        </form>\n      </Dialog>\n    </>\n  );\n};\n","/* eslint-disable no-use-before-define */\nimport React, { useState/* , useCallback */ } from \"react\";\nimport { /* useDispatch, */ useSelector } from \"react-redux\";\nimport { createSelector } from \"reselect\";\n\nimport Dialog from \"@material-ui/core/Dialog\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Typography from \"@material-ui/core/Typography\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\n\nimport Autocomplete, {\n  createFilterOptions,\n} from \"@material-ui/lab/Autocomplete\";\n\nconst dataSelector = createSelector(\n    (data) => data.refd.catHelper,\n    (data) => data.refd.categories,\n    (data) => data.items.item,\n    (catHelper, categories, item) => {\n        return {helper:catHelper, data:categories, item:item}\n    }\n);\n\nconst catProps = {\n  renderOption: (option) => {\n    let items = option.description ? option.description.split(\"/\") : [];\n\n    let item;\n    for (let index in items) {\n      item = items[index];\n      if (item.toLowerCase() === option.name.toLowerCase()) {\n        delete items[index];\n      }\n    }\n\n    return (\n      <div>\n        <Typography color=\"textPrimary\">{option.name}</Typography>\n        <Typography variant=\"body2\" color=\"primary\">\n          {items.join(\" \")}\n        </Typography>\n      </div>\n    );\n  },\n  renderInput: (params) => <TextField {...params} label=\"Category\" />,\n};\n\nexport const Categories = function ({ handleCategory, style, autoProps }) {\n\n  const categorySelector = useSelector(dataSelector);\n  const hasCategory = categorySelector.item && categorySelector.item.hasOwnProperty(\"category\") && categorySelector.item.category.hasOwnProperty(\"name\");\n  const [value, setValue] = useState(hasCategory?categorySelector.item.category:categorySelector[\"data\"][1]);\n  const [open, toggleOpen] = useState(false);\n  const [categories, setCategories] = useState(categorySelector[\"data\"]);\n  const [dialogValue, setDialogValue] = useState({\n    name: \"\",\n    description: \"Kg\",\n    duration: 3\n  });\n\n  const handleClose = () => {\n    setDialogValue({\n      name: \"\",\n      description: \"\",\n      duration: 0\n    });\n\n    toggleOpen(false);\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    setValue({\n      name: dialogValue.name,\n      description: dialogValue.unit,\n      duration: dialogValue.duration\n    });\n\n    if (\n      null !== dialogValue &&\n      undefined !== dialogValue &&\n      dialogValue.hasOwnProperty(\"name\") &&\n      dialogValue.hasOwnProperty(\"description\")\n    ) {\n      handleCategory(\"category\")({\n        target: {\n          value: dialogValue,\n        },\n      });\n    }\n\n    setCategories((categories) => [...categories, dialogValue]);\n\n    handleClose();\n  };\n\n  const filter = createFilterOptions({\n    trim: true,\n    matchFrom: \"any\",\n    stringify: (option) => {\n      let sentenceToken = option.description.split(\"/\");\n      for (let word in sentenceToken) {\n        word = sentenceToken[word];\n        if (categorySelector[\"helper\"].hasOwnProperty(word)) {\n          sentenceToken.push(categorySelector[\"helper\"][word]);\n        }\n      }\n      return option.name.concat(\"-\").concat(sentenceToken.join(\"-\"));\n    },\n  });\n\n  return (\n    <>\n      <Autocomplete\n        id=\"categories-dialog\"\n        {...autoProps}\n        {...catProps}\n        value={value}\n        options={categories}\n        onChange={(event, newValue) => {\n          if (typeof newValue === \"string\") {\n            setTimeout(() => {\n              toggleOpen(true);\n              setDialogValue({\n                name: newValue,\n                description: \"\",\n                duration: 0\n              });\n            });\n          } else if (newValue && newValue.inputValue) {\n            toggleOpen(true);\n            setDialogValue({\n              name: newValue.inputValue,\n              description: \"\",\n              duration: 0\n            });\n          } else {\n            setValue(newValue);\n          }\n          if (\n            null !== newValue &&\n            undefined !== newValue &&\n            newValue.hasOwnProperty(\"name\") &&\n            newValue.hasOwnProperty(\"description\")\n          ) {\n            handleCategory(\"category\")({\n              target: {\n                value: newValue,\n              },\n            });\n          }\n        }}\n        filterOptions={(options, params) => {\n          const filtered = filter(options, params);\n          if (params.inputValue !== \"\") {\n            filtered.push({\n              inputValue: params.inputValue,\n              name: `Add \"${params.inputValue}\"`,\n            });\n          }\n          return filtered;\n        }}\n        style={style}\n      />\n\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"form-categories-dialog\"\n      >\n        <form onSubmit={handleSubmit}>\n          <DialogTitle id=\"form-categories-dialog\">\n            Add a new category\n          </DialogTitle>\n          <DialogContent>\n            <DialogContentText>\n              Did you miss any category in our list? Please, add it!\n            </DialogContentText>\n            <TextField\n              autoFocus\n              margin=\"dense\"\n              id=\"categoryNname\"\n              value={dialogValue.name}\n              onChange={(event) =>\n                setDialogValue({ ...dialogValue, name: event.target.value })\n              }\n              label=\"Name\"\n              type=\"text\"\n            />\n            <TextField\n              margin=\"dense\"\n              id=\"description\"\n              value={dialogValue.description}\n              onChange={(event) =>\n                setDialogValue({\n                  ...dialogValue,\n                  description: event.target.value,\n                })\n              }\n              label=\"Description\"\n              type=\"text\"\n            />\n            <TextField\n              margin=\"dense\"\n              id=\"duration\"\n              value={dialogValue.duration}\n              onChange={(event) =>\n                setDialogValue({\n                  ...dialogValue,\n                  duration: event.target.value,\n                })\n              }\n              label=\"Duration\"\n              type=\"number\"\n            />\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={handleClose} color=\"primary\">\n              Cancel\n            </Button>\n            <Button type=\"submit\" color=\"primary\">\n              Add\n            </Button>\n          </DialogActions>\n        </form>\n      </Dialog>\n    </>\n  );\n};\n","import React, { useState } from \"react\";\n\nimport Camera, { FACING_MODES, IMAGE_TYPES } from \"react-html5-camera-photo\";\nimport \"react-html5-camera-photo/build/css/index.css\";\n\nimport IconButton from \"@material-ui/core/IconButton\";\nimport AddAPhotoIcon from \"@material-ui/icons/AddAPhoto\";\n\nimport \"./cam.css\";\n\nexport const PicIcon = ({ handlePhoto }) => {\n  const [isShow, show] = useState(false);\n\n  const handleTakePhoto = function (source) {\n    handlePhoto(source);\n    show(false);\n  };\n\n  if (isShow) {\n    return (\n        <Camera\n          idealFacingMode={FACING_MODES.ENVIRONMENT}\n          imageType={IMAGE_TYPES.JPG}\n          onTakePhotoAnimationDone={handleTakePhoto}\n          isFullscreen={false}\n          isImageMirror={false}\n          sizeFactor={1}\n        />\n    );\n  }\n\n  return (\n    <IconButton\n      onClick={() => {\n        show(true);\n      }}\n      aria-label=\"photo\"\n    >\n      <AddAPhotoIcon />\n    </IconButton>\n  );\n};\n","import { createSelector } from \"reselect\";\nimport React, { useState, useCallback } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport { v4 as uuid } from 'uuid';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport TextField from \"@material-ui/core/TextField\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport { KeyboardDatePicker } from \"@material-ui/pickers\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport { Grid, Divider, Typography } from \"@material-ui/core\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport RestorePageSharpIcon from '@material-ui/icons/RestorePageSharp';\nimport LibraryAddCheckSharpIcon from '@material-ui/icons/LibraryAddCheckSharp';\n\nimport { Brands } from \"./brands\";\nimport { Message, detailStyles } from \"../theme\";\nimport { Categories } from \"./categories\";\nimport FrontBack from \"./assets/frontBack.jpg\";\nimport { PicIcon } from \"../../components/pic-icon\";\nimport { action, actions, today, dateFormat, currencyStyle} from  \"../../components/redux\";\n\nconst detailsSelector = createSelector(\n    (data) => data.refd.units,\n    (data) => data.items.item,\n    (data) => data.items.loading,\n    (data) => data.store.image,\n    (data) => data.items.dfltItem,\n    (units, item, loading, image, dfltItem) => {return {units:units, item:item, loading:loading, image:image, dfltItem:dfltItem}}\n);\n\nconst autoProps = {\n    freeSolo: true,\n    autoSelect: false,\n    openOnFocus: false,\n    autoComplete: true,\n    selectOnFocus: false,\n    forcePopupIcon: true,\n    disableClearable: true,\n    getOptionLabel: (option) => {\n        if (typeof option === \"string\") {\n            return option;\n        }\n        if (option.inputValue) {\n            return option.inputValue;\n        }\n        return option.name;\n    },\n    onOpen: (event) => {\n        event.stopPropagation();\n        event.preventDefault();\n    },\n};\nconst unitProps = {\n    freeSolo: false,\n    renderOption: (option) => (\n        <Typography color=\"textPrimary\">{option}</Typography>\n    ),\n    renderInput: (params) => <TextField {...params} label=\"Of Unit\" />,\n};\n\nexport const Detail = (props) => {\n    const classes = detailStyles();\n    const dispatch = useDispatch();\n\n    const addCurrentItem = useCallback(\n        (product) => dispatch(action(actions.ADD, product)),\n        [dispatch]\n    );\n\n    const addImage = useCallback(\n        (imgData) => dispatch(action(actions.IMAGE, imgData)),\n        [dispatch]\n    );\n\n    const unsetLoading = useCallback(\n        (loading) => dispatch(action(actions.LOADING, loading)),\n        [dispatch]\n    );\n\n    const [back, setBack] = useState(false);\n    const [isSaveDisable, setSaveDisable] = useState(true);\n\n    const data = useSelector(detailsSelector);\n    unitProps.options = data.units;\n    const [product, setProduct] = useState(data.item);\n\n    const [displayImg, setImage] = useState(data.image.frontImg);\n    const [backImg, setBackImg] = useState(data.image.backImg);\n    const [frontImg, setFrontImg] = useState(data.image.frontImg);\n\n    const handlePhoto = (source) => {\n        setImage(source);\n        if (back) {\n            setBackImg(source);\n        } else {\n            setFrontImg(source);\n        }\n        setSaveDisable(false);\n    };\n\n    const handleChange = (prop) => (event) => {\n        if (\"target\" in event && \"value\" in event.target) {\n            let frmdata = {[prop]: event.target.value};\n            if(event.target.value.hasOwnProperty(\"duration\") ){\n                const duration = event.target.value.duration;\n                const future = new Date(today.getTime() + (duration * 24 * 60 * 60 * 1000));\n                frmdata = { ...frmdata, mfg: today.getTime(), expiry:future.getTime()};\n            }\n            setProduct((product) => {\n                return {...product, ...frmdata};\n            });\n        } else {\n            setProduct((product) => {\n                return {...product, [prop]: event};\n            });\n        }\n        setSaveDisable(false);\n    };\n\n    const [open, setOpen] = useState(false);\n    const [severity, setSeverity] = useState(\"info\");\n    const [msg, setMsg] = useState(\"ok\");\n    const clsMsg = (event, reason) => {\n        if (reason === 'clickaway') {\n            return;\n        }\n        setOpen(false);\n    };\n\n    return (\n        <>\n            <Grid item xs={4}>\n                <TextField\n                    id=\"item-name\"\n                    label=\"Name\"\n                    value={product.itemName}\n                    onChange={handleChange(\"itemName\")}\n                />\n            </Grid>\n            <Grid item xs={2}>\n                <TextField\n                    id=\"item-quantity\"\n                    label=\"Size\"\n                    value={product.quantity}\n                    onChange={handleChange(\"quantity\")}\n                />\n            </Grid>\n            <Grid item xs={4}>\n                <Autocomplete\n                    id=\"item-unit-clearable\"\n                    {...autoProps}\n                    {...unitProps}\n                    value={product.unit}\n                    onChange={(event, unit) => {\n                        handleChange(\"unit\")({\n                            target: {\n                                value: unit,\n                            },\n                        });\n                    }}\n                />\n            </Grid>\n            <Grid item xs={2}>\n                <TextField\n                    id=\"item-numbers\"\n                    label=\"Quantity\"\n                    value={product.nos}\n                    onChange={handleChange(\"nos\")}\n                />\n            </Grid>\n            {/* --------------------------------------------------------------------- */}\n            <Grid item xs={12}>\n                <img\n                    src={displayImg}\n                    alt=\"zoomed detail\"\n                    className={classes.imgMain}\n                />\n                <Tooltip title=\"click to activate save on right\">\n                <IconButton\n                    onClick={() => {\n                        unsetLoading(true);\n                        setImage(FrontBack);\n                        setSaveDisable(false);\n                        delete data.dfltItem.uuid;\n                        setProduct(data.dfltItem);\n                    }}\n                    aria-label=\"refresh\"\n                    className={classes.restoreIcon} component=\"span\">\n                    <RestorePageSharpIcon color=\"primary\" />\n                </IconButton>\n                </Tooltip>\n                <Tooltip title=\"save product info\">\n                <IconButton\n                    onClick={() => {\n                        if(product && !product.hasOwnProperty(\"uuid\")) product.uuid = uuid();\n                        setImage(FrontBack);\n                        setSaveDisable(true);\n                        addCurrentItem(product);\n                        addImage({uuid:product.uuid, frontImg:frontImg, backImg:backImg});\n                        setSeverity(\"success\");\n                        setMsg((product.nos * product.quantity)+\" \"+product.unit+\" of \"+product.itemName+\" worth \"+currencyStyle.format(product.nos * product.price)+\" added to the stock\");\n                        setOpen(true);\n                    }}\n                    aria-label=\"save\"\n                    className={classes.saveIcon} disabled={isSaveDisable} component=\"span\">\n                    <LibraryAddCheckSharpIcon color={isSaveDisable?\"disabled\":\"primary\"} />\n                </IconButton>\n                </Tooltip>\n                <hr />\n                <Message open={open}  severity={severity} msg={msg} onClose={clsMsg} />\n            </Grid>\n            {/* --------------------------------------------------------------------- */}\n            <Grid item xs={2} className={classes.imgChk}>\n            <IconButton\n                    onClick={() => {\n                        setBack(true);\n                        setImage(backImg);\n                    }}\n                    aria-label=\"back item\"\n                    edge=\"start\"\n                >\n                    <img\n                        src={backImg}\n                        alt=\"back part\"\n                        className={classes.imgIcon}\n                    />\n                </IconButton>\n            </Grid>\n            <Grid item xs={2} className={classes.imgChk}>\n                <IconButton\n                    onClick={() => {\n                        setBack(false);\n                        setImage(frontImg);\n                    }}\n                    aria-label=\"front item\"\n                    edge=\"start\"\n                >\n                    <img\n                        src={frontImg}\n                        alt=\"front part\"\n                        className={classes.imgIcon}\n                    />\n                </IconButton>\n            </Grid>\n            <Grid item xs={3}>\n                <TextField\n                    id=\"item-price\"\n                    label=\"Price\"\n                    value={product.price}\n                    onChange={handleChange(\"price\")}\n                    InputProps={{\n                        endAdornment: (\n                            <InputAdornment position=\"end\">₹</InputAdornment>\n                        ),\n                    }}\n                />\n            </Grid>\n            <Grid item xs={3}>\n                <TextField\n                    id=\"item-cost\"\n                    label=\"Total\"\n                    value={currencyStyle.format(product.nos * product.price)}\n                    disabled\n                />\n            </Grid>\n            <Grid item xs={2}>\n                <PicIcon handlePhoto={handlePhoto} />\n            </Grid>\n            {/* --------------------------------------------------------------------- */}\n            <Grid item xs={12}>\n                <Divider />\n            </Grid>\n            {/* --------------------------------------------------------------------- */}\n            <Grid item xs={6}>\n                <KeyboardDatePicker\n                    value={product.mfg}\n                    onChange={handleChange(\"mfg\")}\n                    label=\"Manufacturing Date\"\n                    minDate={new Date(\"2018-01-01T00:00\")}\n                    format=\"dd -/- MM -/- yy\"\n                    disableFuture\n                    showTodayButton\n                />\n            </Grid>\n            <Grid item xs={6}>\n                <KeyboardDatePicker\n                    value={product.expiry}\n                    onChange={handleChange(\"expiry\")}\n                    label=\"Expiry Date\"\n                    minDate={new Date(\"2018-01-01T00:00\")}\n                    format=\"dd -/- MM -/- yy\"\n                    disablePast\n                    showTodayButton\n                />\n            </Grid>\n            {/* --------------------------------------------------------------------- */}\n            <Grid item xs={6}>\n                <Brands handleBrand={handleChange} autoProps={autoProps} />\n            </Grid>\n            <Grid item xs={6}>\n                <Categories\n                    handleCategory={handleChange}\n                    autoProps={autoProps}\n                />\n            </Grid>\n            {/* --------------------------------------------------------------------- */}\n            <Grid item xs={6}>\n                <TextField\n                    id=\"item-created\"\n                    label=\"Created Date\"\n                    value={dateFormat.format(product.createDt)}\n                    disabled\n                />\n            </Grid>\n            <Grid item xs={6}>\n                <TextField\n                    id=\"item-updated\"\n                    label=\"Updated Date\"\n                    value={dateFormat.format(product.updateDt)}\n                    disabled\n                />\n            </Grid>\n        </>\n    );\n};\n","import React from \"react\";\nimport { createSelector } from \"reselect\";\nimport { useSelector } from \"react-redux\";\n\nimport DetailsIcon from \"@material-ui/icons/Details\";\nimport HelpOutlineIcon from \"@material-ui/icons/HelpOutline\";\nimport ShoppingCartSharpIcon from '@material-ui/icons/ShoppingCartSharp';\nimport TrendingDownIcon from \"@material-ui/icons/TrendingDown\";\n\nimport { Help } from \"../../views/help\";\nimport { Stock } from \"../../views/stock\";\nimport { Expiry } from \"../../views/expiry\";\nimport { Detail } from \"../../views/detail\";\n\nconst prodListSelector = createSelector(\n    (data) => data.items.list,\n    (list) => list\n);\n\nexport const Routes = () => {\n    const prodList = useSelector(prodListSelector);\n\n    let routes = [\n        {\n            path: \"/\",\n            name: \"Help\",\n            component: Help,\n            icon: <HelpOutlineIcon />\n        },\n        {\n            path: \"/stock\",\n            name: \"Stock\",\n            component: Stock,\n            icon: <ShoppingCartSharpIcon />\n        },\n        {\n            path: \"/expiry\",\n            name: \"Expiry\",\n            component: Expiry,\n            icon: <TrendingDownIcon />\n        },\n        {\n            path: \"/detail\",\n            name: \"Detail\",\n            component: Detail,\n            icon: <DetailsIcon />\n        }\n    ];\n\n    if(prodList && prodList.length > 0){\n        let help = routes.shift();\n        routes[0].path = \"/\";\n        help.path = \"/help\";\n        routes.push(help);\n    }\n\n    return routes;\n};\n","import React from \"react\";\nimport { Link, withRouter, useLocation } from \"react-router-dom\";\n\nimport BottomNavigation from \"@material-ui/core/BottomNavigation\";\nimport BottomNavigationAction from \"@material-ui/core/BottomNavigationAction\";\n\nimport { Routes } from \"./routes\";\nimport { navStyles } from \"../../views/theme\";\n\nconst Navigation = (props) => {\n    const routes = Routes();\n    const classes = navStyles();\n    const pathname = useLocation().pathname;\n    let location = routes.filter(route => route.path ===  pathname)[0];\n    location = location ? location.name ? location.name : \"Expiry\" : \"Expiry\";\n\n    return (\n        <>\n        <BottomNavigation\n            value={location}\n            className={classes.navRoot}\n        >\n        {routes.map((prop, key) => {\n            return (\n                <BottomNavigationAction\n                component={Link}\n                to={prop.path}\n                label={prop.name}\n                value={prop.name}\n                icon={prop.icon}\n                key={key}\n                />\n                );\n            })}\n        </BottomNavigation>\n        </>\n    );\n};\n\nexport default withRouter(Navigation);\n","import { createStore, applyMiddleware, compose, combineReducers } from \"redux\";\n\nimport { createBrowserHistory } from \"history\";\nimport { connectRouter } from \"connected-react-router\";\n\nimport thunk from \"redux-thunk\";\nimport { routerMiddleware } from \"connected-react-router\";\n\nimport { refd, items, store } from \"../components/redux\";\n\nimport storage from 'redux-persist/lib/storage';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport autoMergeLevel2 from 'redux-persist/lib/stateReconciler/autoMergeLevel2';\n\nexport const history = createBrowserHistory();\n\nconst persistConfig = {\n    key: 'root',\n    storage: storage,\n    stateReconciler: autoMergeLevel2\n};\n\nconst rootReducer = combineReducers({\n    router: connectRouter(history),\n    refd,\n    items,\n    store\n});\n\nconst pReducer = persistReducer(persistConfig, rootReducer);\n\nexport const inventory = createStore(\n    pReducer,\n    compose(\n        applyMiddleware(thunk, routerMiddleware(History)),\n        window.__REDUX_DEVTOOLS_EXTENSION__\n            ? window.__REDUX_DEVTOOLS_EXTENSION__()\n            : (f) => f\n    )\n);\n\nexport const persistor = persistStore(inventory);","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import ReactDOM from \"react-dom\";\nimport React, { useMemo } from \"react\";\n\nimport { Provider } from \"react-redux\";\nimport { Route, Switch, Redirect } from \"react-router-dom\";\nimport { PersistGate } from 'redux-persist/integration/react'\nimport { ConnectedRouter as Router } from \"connected-react-router\";\n\nimport { Grid } from \"@material-ui/core\";\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport { ThemeProvider } from \"@material-ui/core/styles\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\nimport { MuiPickersUtilsProvider } from \"@material-ui/pickers\";\n\nimport Nav from \"./components/nav\";\nimport { Routes } from \"./components/nav/routes\";\nimport { inventory, persistor, history } from \"./services/data\";\nimport { inventoryUi, inventoryStyles } from \"./views/theme\";\n\nimport * as serviceWorker from \"./serviceWorker\";\n\nconst App = (props) => {\n  const classes = inventoryStyles();\n\n  const prefersDarkMode = useMediaQuery(\"(prefers-color-scheme: light)\");\n  const theme = useMemo(() => inventoryUi(prefersDarkMode), [prefersDarkMode]);\n\n  return (\n    <ThemeProvider theme={theme}>\n      <MuiPickersUtilsProvider utils={DateFnsUtils}>\n        <Grid container className={classes.root} alignItems=\"flex-start\" justify=\"space-evenly\">\n          <Grid item xs={12} className={classes.footer}>\n            <Nav {...props} />\n          </Grid>\n          <Grid item xs={12} spacing={1} container  className={classes.component}>\n            <Switch>\n              {Routes().map((route) => (\n                <Route exact path={route.path} key={route.path}>\n                  <route.component {...props} />\n                </Route>\n              ))}\n              <Redirect to=\"/\" />\n            </Switch>\n          </Grid>\n        </Grid>\n      </MuiPickersUtilsProvider>\n    </ThemeProvider>\n  );\n};\n\nReactDOM.render(\n  <Provider store={inventory}>\n    <PersistGate loading={null} persistor={persistor}>\n        <Router history={history}>\n            <CssBaseline />\n            <App />\n        </Router>\n    </PersistGate>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// unregister() to register() below. service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/frontBack.e03ec62c.jpg\";"],"sourceRoot":""}